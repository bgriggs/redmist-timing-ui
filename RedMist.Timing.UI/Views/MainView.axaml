<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:RedMist.Timing.UI.ViewModels"
			 xmlns:design="clr-namespace:RedMist.Timing.UI.ViewModels.Design"
			 xmlns:v="clr-namespace:RedMist.Timing.UI.Views"
             mc:Ignorable="d" d:DesignWidth="350" d:DesignHeight="450"
             x:Class="RedMist.Timing.UI.Views.MainView"
             x:DataType="vm:MainViewModel">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<design:DesignMainViewModel />
	</Design.DataContext>

	<UserControl.Resources>
		<x:Double x:Key="TabItemHeaderFontSize">13</x:Double>
		<!--<Thickness x:Key="TabItemHeaderMargin">5,1,1,1</Thickness>-->
	</UserControl.Resources>

	<Grid RowDefinitions="*" IsVisible="{Binding IsContentVisible}">
		<ContentControl IsVisible="{Binding IsEventsListVisible}">
			<v:EventsListView Name="eventsPage" DataContext="{Binding EventsListViewModel}"/>
		</ContentControl>
		<TabControl Padding="0" TabStripPlacement="Bottom" IsVisible="{Binding !IsEventsListVisible}">
			<TabItem IsVisible="{Binding IsLiveTimingTabVisible}">
				<TabItem.Header>
					<StackPanel Width="60">
						<PathIcon Height="15" Foreground="{DynamicResource IconButtonForegroundBrush}" Data="{StaticResource flaggeom}"/>
						<TextBlock Text="Live" HorizontalAlignment="Center"/>
					</StackPanel>
				</TabItem.Header>
				<v:LiveTimingView DataContext="{Binding LiveTimingViewModel}"></v:LiveTimingView>
			</TabItem>
			<TabItem Header="Results" IsSelected="{Binding IsResultsTabSelected}">
				<TabItem.Header>
					<StackPanel Width="60">
						<PathIcon Height="15" Margin="0,2,0,0" Foreground="{DynamicResource IconButtonForegroundBrush}" Data="{StaticResource trophygeom}">
							<PathIcon.RenderTransform>
								<RotateTransform Angle="180"/>
							</PathIcon.RenderTransform>
						</PathIcon>
						<TextBlock Text="Results" Margin="0,1,0,0" HorizontalAlignment="Center"/>
					</StackPanel>
				</TabItem.Header>
				<v:ResultsView DataContext="{Binding ResultsViewModel}"/>
			</TabItem>
			<TabItem Header="Information">
				<TabItem.Header>
					<StackPanel Width="60">
						<PathIcon Height="15" Margin="0,3,0,0" Foreground="{DynamicResource IconButtonForegroundBrush}" Data="{StaticResource infogeom}"/>
						<TextBlock Text="Info" Margin="0,1,0,0" HorizontalAlignment="Center"/>
					</StackPanel>
				</TabItem.Header>
				<v:EventInformationView DataContext="{Binding EventInformationViewModel}"/>
			</TabItem>
			<TabItem Header="Control Log" IsSelected="{Binding IsControlLogTabSelected}" IsVisible="{Binding IsControlLogTabVisible}">
				<TabItem.Header>
					<StackPanel Width="70">
						<PathIcon Height="15" Margin="0,2,0,0" Foreground="{DynamicResource IconButtonForegroundBrush}" Data="{StaticResource warninggeom}"/>
						<TextBlock Text="Control Log" Margin="0,1,0,0" HorizontalAlignment="Center"/>
					</StackPanel>
				</TabItem.Header>
				<v:ControlLogView DataContext="{Binding ControlLogViewModel}"/>
			</TabItem>
			<TabItem Header="Flags" IsVisible="{Binding IsFlagsTabVisible}">
				<TabItem.Header>
					<StackPanel Width="60">
						<PathIcon Height="15" Margin="0,3,0,0" Foreground="{DynamicResource IconButtonForegroundBrush}" Data="{StaticResource flaggeom}"/>
						<TextBlock Text="Flags" Margin="0,1,0,0" HorizontalAlignment="Center"/>
					</StackPanel>
				</TabItem.Header>
				<v:FlagsView DataContext="{Binding FlagsViewModel}"/>
			</TabItem>
		</TabControl>
	</Grid>
</UserControl>
