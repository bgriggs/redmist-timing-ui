<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:design="clr-namespace:RedMist.Timing.UI.ViewModels.Design"
			 xmlns:conv="clr-namespace:RedMist.Timing.UI.Converters"
			 xmlns:sel="clr-namespace:RedMist.Timing.UI.TemplateSelectors"
			 xmlns:c="clr-namespace:RedMist.Timing.UI.Controls"
			 xmlns:lvc="using:LiveChartsCore.SkiaSharpView.Avalonia"
			 xmlns:model="using:RedMist.Timing.UI.ViewModels"
             mc:Ignorable="d" d:DesignWidth="450" d:DesignHeight="750"
             x:Class="RedMist.Timing.UI.Views.LiveTimingView"
			 x:DataType="model:LiveTimingViewModel">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<design:DesignLiveTimingViewModel />
	</Design.DataContext>

	<UserControl.Resources>
		<conv:FlagToBrushConverter x:Key="FlagToColorConverter"/>
		<StreamGeometry x:Key="downArrow">M998 352c0 -8 -4 -17 -10 -23l-50 -50c-6 -6 -14 -10 -23 -10c-8 0 -17 4 -23 10l-393 393l-393 -393c-6 -6 -15 -10 -23 -10s-17 4 -23 10l-50 50c-6 6 -10 15 -10 23s4 17 10 23l466 466c6 6 15 10 23 10s17 -4 23 -10l466 -466c6 -6 10 -15 10 -23z</StreamGeometry>
		<StreamGeometry x:Key="upArrow">M998 800c0 -8 -4 -17 -10 -23l-466 -466c-6 -6 -15 -10 -23 -10s-17 4 -23 10l-466 466c-6 6 -10 15 -10 23s4 17 10 23l50 50c6 6 14 10 23 10c8 0 17 -4 23 -10l393 -393l393 393c6 6 15 10 23 10s17 -4 23 -10l50 -50c6 -6 10 -15 10 -23z</StreamGeometry>
		<StreamGeometry x:Key="lightning">M 52.2573,19.0027L 38.0053,33.2546L 50.6737,33.2546L 25.3369,57.008L 35.4716,38.0053L 23.7533,38.0053L 36.4217,19.0027L 52.2573,19.0027 Z </StreamGeometry>
		<StreamGeometry x:Key="doubleLightning">M7.96,24.51h0.39l6.88-10.18c0.09-0.18,0.04-0.27-0.15-0.27h-2.84l2.99-5.45c0.09-0.18,0.02-0.27-0.2-0.27h-3.81  c-0.11,0-0.2,0.06-0.29,0.18l-2.78,7.4c-0.02,0.18,0.04,0.27,0.19,0.27h2.75L7.96,24.51z M16.46,18.18h0.27l5.22-7.67  c0.05-0.08,0.06-0.15,0.04-0.2s-0.08-0.07-0.17-0.07h-2.1l2.18-4.03c0.12-0.2,0.06-0.3-0.18-0.3h-2.74c-0.13,0-0.23,0.06-0.3,0.19  l-2.08,5.48c-0.03,0.09-0.03,0.16,0.01,0.21c0.04,0.05,0.1,0.07,0.19,0.07h2.04L16.46,18.18z</StreamGeometry>

		<!--Car Row Template-->
		<DataTemplate x:Key="carTemplate" DataType="model:CarViewModel">
			<Grid ColumnDefinitions="Auto,*,Auto">
				<!--Row update flash animation-->
				<Grid.Transitions>
					<Transitions>
						<BrushTransition Property="Background" Duration="0:0:1"/>
					</Transitions>
				</Grid.Transitions>
				<Grid.Background>
					<SolidColorBrush Color="{Binding RowBackground}"/>
				</Grid.Background>
				<Border Grid.ColumnSpan="3" BorderThickness="0,0,0,1" BorderBrush="Gray" VerticalAlignment="Bottom"/>

				<!--Car position and positions gained/lost-->
				<Grid RowDefinitions="Auto,*,Auto" HorizontalAlignment="Center">
					<TextBlock Text="{Binding Position}" Classes="lg" Grid.Column="0" Margin="2,0,0,0" Width="32" HorizontalAlignment="Left"/>

					<!--Positions gained/lost-->
					<StackPanel DataContext="{Binding PositionsGainedLost}" Grid.Row="2" HorizontalAlignment="Left" Margin="3,0,0,3">
						<Grid ColumnDefinitions="Auto,Auto" IsVisible="{Binding IsGain}">
							<PathIcon Height="8" Width="8" Foreground="{DynamicResource PositionsGainedForegroundBrush}" Data="{StaticResource upArrow}" VerticalAlignment="Top" Margin="0,1,0,0"/>
							<TextBlock Text="{Binding PositionChangeText}" Classes="sm" Foreground="{DynamicResource PositionsGainedForegroundBrush}" Grid.Column="1"/>
						</Grid>
						<Grid ColumnDefinitions="Auto,Auto" IsVisible="{Binding IsLoss}">
							<PathIcon Height="8" Width="8" Foreground="{DynamicResource PositionsLostForegroundBrush}" Data="{StaticResource downArrow}"/>
							<TextBlock Text="{Binding PositionChangeText}" Classes="sm" Foreground="{DynamicResource PositionsLostForegroundBrush}" Grid.Column="1"/>
						</Grid>
						<Grid ColumnDefinitions="Auto,Auto" IsVisible="{Binding IsNoChange}">
							<StackPanel Orientation="Vertical">
								<PathIcon Height="8" Width="8" Foreground="{DynamicResource PositionsNeutralForegroundBrush}" Data="{StaticResource upArrow}"/>
								<PathIcon Height="8" Width="8" Foreground="{DynamicResource PositionsNeutralForegroundBrush}" Data="{StaticResource downArrow}" Margin="0,-2,0,0"/>
							</StackPanel>
							<TextBlock Text="0" Classes="sm" Foreground="{DynamicResource PositionsNeutralForegroundBrush}" Grid.Column="1" Margin="1,0,0,0" VerticalAlignment=""/>
						</Grid>
					</StackPanel>
				</Grid>
				<Grid RowDefinitions="Auto,Auto,Auto" Margin="1,0,0,4" Grid.Column="1">
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="{Binding Number, StringFormat='#{0}'}}" Classes="smb" VerticalAlignment="Center"/>
						<TextBlock Text="{Binding Name}" Margin="2,0,0,0" Classes="lg"/>
						<PathIcon Height="10" Width="10" Foreground="Orange" Data="{StaticResource lightning}"
								  IsVisible="{Binding IsClassMostPositionsGained}" ToolTip.Tip="Most in-class positions gained"/>
						<PathIcon Height="12" Width="12" Foreground="Orange" Data="{StaticResource doubleLightning}"
								  IsVisible="{Binding IsOverallMostPositionsGained}" ToolTip.Tip="Most positions gained"/>
						<Button Classes="icon" IsVisible="{Binding IsCarStreaming}" Command="{Binding LaunchInCarVideo}" ToolTip.Tip="Open in-car video stream" Padding="0" Height="14" Margin="3,-2,0,0">
							<Image Source="{Binding CarStreamImage}"/>
						</Button>

						<ContentControl Content="{Binding PitState}">
							<ContentControl.DataTemplates>
								<sel:PitIconTemplateSelector>
									<DataTemplate x:Key="InPitTemplate">
										<Border Width="45" Margin="1" CornerRadius="4" Background="#075aa1">
											<TextBlock Text="PIT" Classes="pit"/>
										</Border>
									</DataTemplate>
									<DataTemplate x:Key="EnteredPitTemplate">
										<Border Width="68" Margin="1" CornerRadius="4" Background="#ff6743">
											<TextBlock Text="ENTERED PIT" Classes="pit"/>
										</Border>
									</DataTemplate>
									<DataTemplate x:Key="ExitedPitTemplate">
										<Border Width="63" Margin="1" CornerRadius="4" Background="#9ad337">
											<TextBlock Text="EXITED PIT" Classes="pit"/>
										</Border>
									</DataTemplate>
									<DataTemplate x:Key="PitSfTemplate">
										<Border Width="50" Margin="1" CornerRadius="4" Background="#475e1e" ToolTip.Tip="Passed Pit Start / Finish">
											<TextBlock Text="PIT S/F" Classes="pit"/>
										</Border>
									</DataTemplate>
									<DataTemplate x:Key="NoPit">
									</DataTemplate>
								</sel:PitIconTemplateSelector>
							</ContentControl.DataTemplates>
						</ContentControl>
					</StackPanel>
					
					<!--Drier Name-->
					<TextBlock Text="{Binding DriverName, StringFormat='Driver: {0}'}" Grid.Row="1" IsVisible="{Binding HasDriverName}" Classes="sm" Margin="0"/>
					
					<Grid ColumnDefinitions="Auto,Auto,Auto,Auto" Grid.Row="2">
						<StackPanel Orientation="Horizontal" Width="107">
							<TextBlock Text="{Binding LastLap}" Classes="sm" Foreground="{Binding LapDataColor}" FontWeight="{Binding LapDataFontWeight}"/>
							<TextBlock Text=" / " Classes="sm" Foreground="{Binding LapDataColor}" FontWeight="{Binding LapDataFontWeight}"/>
							<TextBlock Text="{Binding LastTimeShort}" Classes="sm" Foreground="{Binding LapDataColor}" FontWeight="{Binding LapDataFontWeight}"/>
						</StackPanel>
						<TextBlock Text="{Binding Gap}" Grid.Column="1" Classes="sm" Width="70"/>
						<TextBlock Text="{Binding Difference}" Grid.Column="2" Classes="sm" Width="70"/>
						<StackPanel Orientation="Horizontal" Grid.Column="3" IsVisible="{Binding ShowPenaltyColumn}">
							<PathIcon Height="10" IsVisible="{Binding HasPenaltyWarnings}" Margin="0,0,0,1" Foreground="Orange" Data="{StaticResource warningopengeom}" VerticalAlignment="Center" ToolTip.Tip="Car was issued a warning"/>
							<StackPanel Orientation="Horizontal" IsVisible="{Binding HasPenaltyLaps}">
								<TextBlock Text="{Binding PenaltyLaps, StringFormat='-{0}'}" Classes="sm"/>
								<TextBlock Text="{Binding PenaltyLapTerm}" Classes="sm" Margin="2,0,0,0"/>
							</StackPanel>
						</StackPanel>
					</Grid>
				</Grid>
				<Grid RowDefinitions="Auto,*,Auto" Margin="0,0,5,3" Grid.Column="2">
					<TextBlock Text="{Binding Class}" HorizontalAlignment="Right" Classes="lg"/>
					<StackPanel Orientation="Horizontal" Grid.Row="2">
						<TextBlock Text="{Binding BestLap}" Classes="sm" Foreground="{Binding LapDataColor}" FontWeight="{Binding LapDataFontWeight}"/>
						<TextBlock Text=" / " Classes="sm" Foreground="{Binding LapDataColor}" FontWeight="{Binding LapDataFontWeight}"/>
						<TextBlock Text="{Binding BestTimeShort}" Classes="sm" Foreground="{Binding LapDataColor}" FontWeight="{Binding LapDataFontWeight}"/>
					</StackPanel>
				</Grid>
			</Grid>
		</DataTemplate>

		<!--Car Row Toggle Button-->
		<ControlTemplate x:Key="rowToggleButtonTemplate" TargetType="ToggleButton">
			<Border x:Name="ToggleButtonBackground" CornerRadius="{TemplateBinding CornerRadius}"
					Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}">
				<Grid x:Name="ToggleButtonGrid" ColumnDefinitions="*,Auto">
					<ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}"
									  ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}"
									  Margin="{TemplateBinding Padding}"/>
				</Grid>
			</Border>
		</ControlTemplate>

		<!--Car Row Expander-->
		<ControlTemplate x:Key="rowExpanderTemplate" TargetType="Expander">
			<DockPanel MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}">
				<ToggleButton x:Name="ExpanderHeader" Template="{StaticResource rowToggleButtonTemplate}"
							  CornerRadius="{TemplateBinding CornerRadius}"
							  IsEnabled="{TemplateBinding IsEnabled}" Content="{TemplateBinding Header}"
							  ContentTemplate="{TemplateBinding HeaderTemplate}" IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}"
							  Background="Transparent" BorderBrush="Gray" Padding="0"/>
				<Border x:Name="ExpanderContent" IsVisible="{TemplateBinding IsExpanded, Mode=TwoWay}"
						Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"	MinHeight="{TemplateBinding MinHeight}"
						HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}">
					<ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}"
									  ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="{TemplateBinding Foreground}"
									  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
				</Border>
			</DockPanel>
		</ControlTemplate>

		<!--Car Expander Data Template-->
		<DataTemplate x:Key="carExpanderTemplate" DataType="model:CarViewModel">
			<Expander Header="{Binding .}" HeaderTemplate="{StaticResource carTemplate}" Template="{StaticResource rowExpanderTemplate}"
					  Padding="0" CornerRadius="0" MinHeight="0" HorizontalAlignment="Stretch" IsExpanded="{Binding IsDetailsExpanded}">
				<Grid RowDefinitions="Auto,*" DataContext="{Binding CarDetailsViewModel}">
					<Border Padding="3" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource CarDetailsSeperatorBackgroundBrush}" CornerRadius="0" Margin="0,1,0,0" IsVisible="{Binding IsCarMetadataVisible}">
						<Grid RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="Auto,Auto,Auto">
							<TextBlock Text="{Binding Name, StringFormat='Name: {0}'}" Classes="sm"/>
							<TextBlock Text="{Binding NationState, StringFormat='Country/State: {0}'}" Classes="sm" Grid.Column="1" Margin="6,0,0,0"/>
							<TextBlock Text="{Binding Sponsor, StringFormat='Sponsor: {0}'}" Classes="sm" Grid.Column="2" Margin="6,0,0,0"/>

							<TextBlock Text="{Binding Make, StringFormat='Make: {0}'}" Classes="sm" Grid.Row="1"/>
							<TextBlock Text="{Binding ModelEngine, StringFormat='Color/Model: {0}'}" Classes="sm" Grid.Row="1" Grid.Column="1" Margin="6,0,0,0"/>
							<TextBlock Text="{Binding Tires, StringFormat='Tires: {0}'}" Classes="sm" Grid.Row="1" Grid.Column="3" Margin="6,0,0,0"/>

							<TextBlock Text="{Binding Club, StringFormat='Club: {0}'}" Classes="sm" Grid.Row="2" Grid.ColumnSpan="3"/>
						</Grid>
					</Border>
					<Grid Grid.Row="1">
						<TextBlock Text="Loading..." Classes="sm" IsVisible="{Binding IsLoading}"/>
						<TabControl Padding="0" IsVisible="{Binding !IsLoading}">
							<!--Laps-->
							<TabItem Header="Laps" IsSelected="{Binding IsTableTabSelected}">
								<Grid RowDefinitions="Auto,*" Margin="10,3">
									<TextBlock Classes="tableheader" Text="LAP  POS  CLS POS     TIME        PIT     FLAG    RACE TIME"/>
									<ScrollViewer MaxHeight="250" Grid.Row="1">
										<ItemsControl ItemsSource="{Binding LapList.Laps}">
											<ItemsControl.ItemTemplate>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="{Binding LapNumber}" Classes="sm" Margin="1,0,0,0" Width="30"/>
														<StackPanel Orientation="Horizontal" Width="49">
															<TextBlock Text="{Binding OverallPosition}" Classes="sm"/>
															<PathIcon Height="10" Width="6" IsVisible="{Binding GainedOverallPosition}" Foreground="{DynamicResource PositionsGainedForegroundBrush}" Data="{StaticResource uparrowgeom}"/>
															<PathIcon Height="10" Width="6" IsVisible="{Binding LostOverallPosition}" Foreground="{DynamicResource PositionsLostForegroundBrush}" Data="{StaticResource downarrowgeom}"/>
														</StackPanel>
														<StackPanel Orientation="Horizontal" Width="42">
															<TextBlock Text="{Binding ClassPosition}" Classes="sm"/>
															<PathIcon Height="10" Width="6" IsVisible="{Binding GainedClassPosition}" Foreground="{DynamicResource PositionsGainedForegroundBrush}" Data="{StaticResource uparrowgeom}"/>
															<PathIcon Height="10" Width="6" IsVisible="{Binding LostClassPosition}" Foreground="{DynamicResource PositionsLostForegroundBrush}" Data="{StaticResource downarrowgeom}"/>
														</StackPanel>
														<TextBlock Text="{Binding LapTime}" Classes="sm" Width="61" Foreground="{Binding TimeColor}" FontWeight="{Binding TimeFontWeight}"/>
														<TextBlock Text="{Binding InPit}" Classes="sm" Width="20"/>
														<PathIcon Height="11" Width="70" Foreground="{Binding Flag, Converter={StaticResource FlagToColorConverter}}" Data="{StaticResource flaggeom}" ToolTip.Tip="{Binding FlagStr}"/>
														<TextBlock Text="{Binding RaceTime}" Classes="sm" Margin="1,0,0,0"/>
													</StackPanel>
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
									</ScrollViewer>
								</Grid>
							</TabItem>

							<!--Positions Chart-->
							<TabItem Header="Positions" IsSelected="{Binding IsChartTabSelected}">
								<!--<lvc:CartesianChart MinWidth="90" Height="240" LegendPosition="Hidden"
												Series="{Binding Chart.Series}" YAxes="{Binding Chart.YAxes}" XAxes="{Binding Chart.XAxes}"
												ZoomMode="X" Padding="0"/>-->
								<ContentControl Content="{Binding Chart.Chart}"/>
							</TabItem>

							<!--Penalties-->
							<TabItem Header="Penalties" IsSelected="{Binding IsPenaltiesTabSelected}">
								<DataGrid ItemsSource="{Binding ControlLog}" IsReadOnly="True" Padding="0"
										  FontSize="10" ScrollViewer.HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch">
									<DataGrid.Columns>
										<DataGridTextColumn Header="Time" Binding="{Binding Timestamp}" Width="70"/>
										<DataGridTextColumn Header="Corner" Binding="{Binding Corner}"/>
										<DataGridTextColumn Header="Car 1" Binding="{Binding Car1}"/>
										<DataGridTextColumn Header="Car 2" Binding="{Binding Car2}"/>
										<DataGridTextColumn Header="Note" Binding="{Binding Note}"/>
										<DataGridTextColumn Header="Status" Binding="{Binding Status}"/>
										<DataGridTextColumn Header="Penalty Action" Binding="{Binding PenalityAction}"/>
										<DataGridTextColumn Header="Other Notes" Binding="{Binding OtherNotes}"/>
									</DataGrid.Columns>
								</DataGrid>
							</TabItem>
						</TabControl>
					</Grid>
				</Grid>
			</Expander>
		</DataTemplate>

		<!--Class header expander-->
		<ControlTemplate x:Key="groupExpanderTemplate" TargetType="Expander">
			<DockPanel MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}">
				<ToggleButton x:Name="ExpanderHeader" Height="33" CornerRadius="{TemplateBinding CornerRadius}"
							  IsEnabled="{TemplateBinding IsEnabled}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"
							  IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}" Background="LightGray" BorderBrush="Gray"/>
				<Border x:Name="ExpanderContent" IsVisible="{TemplateBinding IsExpanded, Mode=TwoWay}" Background="Transparent"
						BorderBrush="{TemplateBinding BorderBrush}"	BorderThickness="{TemplateBinding BorderThickness}"
						MinHeight="{TemplateBinding MinHeight}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}">
					<ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
									  Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
				</Border>
			</DockPanel>
		</ControlTemplate>

		<x:Double x:Key="DataGridSortIconMinWidth">0</x:Double>
	</UserControl.Resources>

	<UserControl.Styles>
		<Style Selector="TabItem">
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="MinHeight" Value="20"/>
			<Setter Property="Height" Value="20"/>
			<Setter Property="Margin" Value="3,5"/>
		</Style>

		<Style Selector="DataGridCell">
			<Setter Property="FontSize" Value="10" />
			<Setter Property="MinHeight" Value="20" />
		</Style>

		<Style Selector="DataGridColumnHeader">
			<Setter Property="FontSize" Value="12" />
			<Setter Property="MinHeight" Value="20" />
			<Setter Property="Padding" Value="3,0,0,0" />
		</Style>

		<Style Selector="TextBlock.pit">
			<Setter Property="FontSize" Value="9"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
	</UserControl.Styles>

	<Grid RowDefinitions="Auto,Auto,Auto,*,Auto" Background="{Binding Flag, Converter={StaticResource FlagToColorConverter}}">
		<!--Top-->
		<Grid ColumnDefinitions="Auto,Auto,*,Auto,Auto,Auto" Margin="4,5,4,0">
			<Button Classes="back" Margin="0,0,5,0" Command="{Binding Back}" IsVisible="{Binding AllowEventList}"/>

			<StackPanel Grid.Column="1">
				<TextBlock Text="{Binding EventName}" Classes="h1" FontWeight="Bold"/>
				<TextBlock Text="{Binding TimeToGo, StringFormat='Time remaining: {0}'}}" Classes="h1"/>
				<TextBlock Text="{Binding RaceTime, StringFormat='Race Time: {0}'}}" Classes="h1"/>
				<TextBlock Text="{Binding LocalTime, StringFormat='Local Time: {0}'}}" Classes="h1"/>
				<TextBlock Text="{Binding TotalLaps, StringFormat='Laps: {0}'}}" Classes="h1"/>
				<StackPanel Orientation="Horizontal">
					<TextBlock Text="Watch Along: " Classes="h1" IsVisible="{Binding IsBroadcastVisible}"/>
					<Button IsVisible="{Binding IsBroadcastVisible}" Classes="link" Command="{Binding LaunchBroadcast}">
						<TextBlock Text="{Binding BroadcastCompanyName}" FontSize="12"/>
					</Button>
				</StackPanel>
			</StackPanel>

			<!--Test Buttons-->
			<!--<StackPanel Grid.Column="2">
				<Button Content="Dup VM" Command="{Binding InsertDuplicateCar}"/>
				<Button Content="Dup View" Command="{Binding InsertDuplicateView}"/>
			</StackPanel>-->

			<Image Source="{Binding OrganizationLogo}" Grid.Column="3" MaxHeight="55" MaxWidth="55" VerticalAlignment="Center" Margin="1,1,10,1"/>

			<StackPanel Grid.Column="4" Orientation="Vertical">
				<Button VerticalAlignment="Center" Command="{Binding ToggleSortMode}" Padding="3" Width="55">
					<StackPanel Orientation="Vertical">
						<TextBlock Text="Sorting" FontStyle="Italic" FontSize="11"/>
						<TextBlock Text="{Binding SortToggleText}" FontSize="9"/>
					</StackPanel>
				</Button>
				<Button VerticalAlignment="Center" Command="{Binding ToggleGroupMode}" Margin="0,6,0,0" Padding="3" Width="55">
					<StackPanel Orientation="Vertical">
						<TextBlock Text="Showing" FontStyle="Italic" FontSize="11"/>
						<TextBlock Text="{Binding GroupToggleText}" FontSize="9"/>
					</StackPanel>
				</Button>
			</StackPanel>
		</Grid>

		<!--Table Header-->
		<Border Grid.Row="1" Background="{DynamicResource TimingTableHeaderBackgroundBrush}" Margin="3,6,3,0" BorderThickness="1" BorderBrush="Gray">
			<Grid ColumnDefinitions="Auto,Auto,Auto,*" Margin="0,2,0,0">
				<TextBlock Text="" Grid.Column="0" Width="35"/>
				<TextBlock Text="LAST LAP               GAP              TO P1" Width="253" Grid.Column="1" Classes="tableheader"/>
				<StackPanel Orientation="Horizontal" Grid.Column="2" IsVisible="{Binding ShowPenaltyColumn}">
					<TextBlock Text="PENALTY" Classes="tableheader"/>
					<PathIcon Height="10" Margin="0,0,0,1" Foreground="{DynamicResource IconButtonForegroundBrush}" Data="{StaticResource warningopengeom}" VerticalAlignment="Center"/>
				</StackPanel>
				<TextBlock Text="BEST LAP" Grid.Column="3" HorizontalAlignment="Right" Classes="tableheader" Margin="0,0,3,0"/>
			</Grid>
		</Border>

		<TextBlock Text="Loading..." IsVisible="{Binding IsLoading}" Grid.Row="2" Classes="title" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>

		<!--Car Table-->
		<Border Grid.Row="3" BorderThickness="1" BorderBrush="Gray" Margin="3,0,3,3" Background="{DynamicResource TimingTableBackgroundBrush}">
			<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
				<Grid>
					<!--Flat-->
					<ItemsControl ItemsSource="{Binding Cars}" ItemTemplate="{StaticResource carExpanderTemplate}" IsVisible="{Binding IsFlat}"/>

					<!--Grouped Classes-->
					<ItemsControl ItemsSource="{Binding GroupedCars}" IsVisible="{Binding !IsFlat}">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="model:GroupHeaderViewModel">
								<Expander Header="{Binding Name}" HorizontalAlignment="Stretch"
										  Padding="0" CornerRadius="0" MinHeight="0"
										  Template="{StaticResource groupExpanderTemplate}">
									<Expander.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding .}" Classes="lg"/>
										</DataTemplate>
									</Expander.HeaderTemplate>
									<ItemsControl ItemsSource="{Binding .}" ItemTemplate="{StaticResource carExpanderTemplate}"/>
								</Expander>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Grid>
			</ScrollViewer>
		</Border>

	</Grid>
</UserControl>
